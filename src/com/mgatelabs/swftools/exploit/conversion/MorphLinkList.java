/*
    Copyright M-Gate Labs 2007
*/

/**
 <p>
 <b>Morph Graph Link List</b>
 </p>
 <p>
 Used to keep track of linked lists.
 </p>
 */

package com.mgatelabs.swftools.exploit.conversion;

public class MorphLinkList {
    private MorphLink root;
    private MorphLink tail;
    private int mySize;

    public MorphLinkList() {
        root = null;
        tail = null;
        mySize = 0;
    }

    public int size() {
        return mySize;
    }

    public MorphLink getRoot() {
        return root;
    }

    public MorphLink add(MorphShape aPath) {
        MorphLink result = new MorphLink(aPath);
        mySize++;

        if (root == null) {
            root = result;
            tail = result;
        } else if (root != null) {
            tail.next = result;
            result.prev = tail;
            tail = result;
        }

        return result;
    }

    public MorphLink addBefore(MorphLink parent, MorphShape aPath) {
        MorphLink result = new MorphLink(aPath);
        mySize++;

        if (parent == root) { // Replace Root
            result.next = root;
            root.prev = result;
            root = result;
        } else { // More to do
            result.prev = parent.prev;
            result.next = parent;
            result.prev.next = result;
            result.next.prev = result;
        }

        return result;
    }

    public void remove(MorphLink aLink) {
        MorphLink aPrev = aLink.prev;
        MorphLink aNext = aLink.next;
        mySize--;

        // Destroy my links
        aLink.prev = null;
        aLink.next = null;

        // Deal with prev first
        if (aPrev != null) {
            aPrev.next = aNext;
        } else // Removing the root node
        {
            root = aNext;
        }

        if (aNext != null) {
            aNext.prev = aPrev;
        } else // Removing the tree node
        {
            tail = aPrev;
        }
    }
}