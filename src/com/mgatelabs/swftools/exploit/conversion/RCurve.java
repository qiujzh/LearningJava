/*
    Copyright M-Gate Labs 2007
*/

/**
 <p>
 <b>A Renderable Curve</b>
 </p>
 */

package com.mgatelabs.swftools.exploit.conversion;

import com.mgatelabs.swftools.support.swf.objects.FFill;
import com.mgatelabs.swftools.support.swf.objects.FLine;

import java.awt.geom.GeneralPath;

public class RCurve extends RBase {
    private long startX;
    private long startY;
    private long endX;
    private long endY;
    private long controlX;
    private long controlY;

    public RCurve(FFill fill, FLine line, long startX, long startY, long endX, long endY, long controlX, long controlY) {
        super(CURVE, fill, line);

        this.startX = startX;
        this.startY = startY;
        this.controlX = controlX + startX;
        this.controlY = controlY + startY;
        this.endX = endX + startX + controlX;
        this.endY = endY + startY + controlY;
    }

    public RCurve(long startX, long startY, long endX, long endY, long controlX, long controlY) {
        super(CURVE, null, null);

        this.startX = startX;
        this.startY = startY;
        this.controlX = controlX;
        this.controlY = controlY;
        this.endX = endX;
        this.endY = endY;
    }

    public long getControlX() {
        return controlX;
    }

    public long getStartX() {
        return startX;
    }

    public long getEndX() {
        return endX;
    }

    public long getControlY() {
        return controlY;
    }

    public long getStartY() {
        return startY;
    }

    public long getEndY() {
        return endY;
    }

    public void flip() {
        super.flip();
        long tempA = startX;
        long tempB = startY;
        startX = endX;
        startY = endY;
        endX = tempA;
        endY = tempB;
    }

    public GeneralPath getPath() {
        GeneralPath aPath = new GeneralPath();
        aPath.moveTo(startX / 20.0f, startY / 20.0f);
        aPath.quadTo(controlX / 20.0f, controlY / 20.0f, endX / 20.0f, endY / 20.0f);
        return aPath;
    }

    public String toString() {
        return "SX:" + (startX / 20.0f) + ",SY:" + (startY / 20.0f) + " EX:" + (endX / 20.0f) + ",EY:" + (endY / 20.0f) + " CX:" + (controlX / 20.0f) + ",CY:" + (controlY / 20.0f);
    }
}