package com.mgatelabs.swftools.exploit.gui;

import com.mgatelabs.swftools.support.swf.objects.FDisplayListItem;
import com.mgatelabs.swftools.support.swf.objects.FMatrix;
import com.mgatelabs.swftools.support.tools.JPanelMaker;

import javax.swing.*;
import java.awt.*;

public class GuiDisplayDetails extends JPanel {

    private FDisplayListItem myItem;

    private JTextField[] matrixFields;

    private JLabel myClipLabel;

    //

    public GuiDisplayDetails() {
        myItem = null;

        buildGui();

        for (int x = 0; x < 6; x++) {
            matrixFields[x].setText("?");
        }
    }

    //

    public void update(FDisplayListItem aItem) {
        myItem = aItem;

        FMatrix myMatrix = myItem.getMatrix();
        if (myMatrix == null) {
            for (int x = 0; x < 6; x++) {
                matrixFields[x].setText("?");
            }
        } else {
            matrixFields[0].setText("" + myMatrix.getScaleX());
            matrixFields[1].setText("" + myMatrix.getRotateSkew1());
            matrixFields[2].setText("" + myMatrix.getTranslateX() / 20.0f);
            matrixFields[3].setText("" + myMatrix.getRotateSkew0());
            matrixFields[4].setText("" + myMatrix.getScaleY());
            matrixFields[5].setText("" + myMatrix.getTranslateY() / 20.0f);
        }

        if (myItem.getClipLayer()) {
            myClipLabel.setText("Clipping: True, To " + myItem.getClipDepth());
        } else {
            myClipLabel.setText("Clipping: False");
        }
    }

    public void clear() {
        myItem = null;

        for (int x = 0; x < 6; x++) {
            matrixFields[x].setText("?");
        }

        myClipLabel.setText("Clipping: False");
    }

    //

    private void buildGui() {
        JPanel master = this;

        //master.setPreferredSize(new Dimension(w,h));
        master.setMaximumSize(new Dimension(500, 100));

        master.setLayout(new BoxLayout(master, BoxLayout.Y_AXIS));

        // Matrix Area
        JPanel matrixPanel = JPanelMaker.YPanel(0, 0);
        JPanel matrixPanelRow1 = JPanelMaker.XPanel(0, 0);
        JPanel matrixPanelRow2 = JPanelMaker.XPanel(0, 0);
        matrixFields = new JTextField[6];
        for (int x = 0; x < 6; x++) {
            matrixFields[x] = new JTextField(6);
            if (x < 3) {
                matrixPanelRow1.add(matrixFields[x]);
            } else {
                matrixPanelRow2.add(matrixFields[x]);
            }
        }
        // Set Tool Tips for Matrix Text Fields
        matrixFields[0].setToolTipText("Scale X");
        matrixFields[1].setToolTipText("Rotate Skew 1");
        matrixFields[2].setToolTipText("Translate X");
        matrixFields[3].setToolTipText("Rotate Skew 0");
        matrixFields[4].setToolTipText("Scale Y");
        matrixFields[5].setToolTipText("Translate Y");

        // Build CLipping Label
        myClipLabel = new JLabel("Clipping: False");

        matrixPanel.add(new JLabel("Item Information"));
        matrixPanel.add(matrixPanelRow1);
        matrixPanel.add(matrixPanelRow2);
        matrixPanel.add(myClipLabel);

        master.add(matrixPanel);
    }

}