package com.mgatelabs.swftools.exploit.gui;

import com.mgatelabs.swftools.support.swf.objects.FMovie;
import com.mgatelabs.swftools.support.swf.objects.FMovieData;
import com.mgatelabs.swftools.support.tools.JPanelMaker;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

//import com.mgatelabs.swftools.exploit.io.*;

public class GuiControl extends JPanel {
    private GuiDisplay myDisplay;
    private GuiDisplayList myExploitDisplayListPanel;
    private FMovieData myFlashMovieData;
    private FMovie myFlashObject;
    private JButton buttonPlay, buttonStop, buttonPause, buttonNext, buttonNext10, buttonNext100, buttonViewDisplay;
    private ExploitActionListener myExploitActionListener;
    private javax.swing.Timer myTimer;
    private JLabel frameLabel;
    private ChangeListener myChangeListener;

    public GuiControl(GuiDisplay aDisplay, GuiDisplayList aExploitDisplayListPanel) {
        myExploitDisplayListPanel = aExploitDisplayListPanel;
        myDisplay = aDisplay;
        myFlashMovieData = null;
        myFlashObject = null;

        myChangeListener = new ChangeListener();

        buildGui();
    }

    ///////////////////////////////////////////////////////////////////////////

    public ExploitChangeListener getListener() {
        return myChangeListener;
    }

    ///////////////////////////////////////////////////////////////////////////

    private class ChangeListener implements ExploitChangeListener {

        public void movieClose() {
            clean(true);
        }

        ///////////////////////////////////////////////////////////////////////

        public void movieOpen(FMovie aMovie) {
            setObject(aMovie);
        }

    }

    ///////////////////////////////////////////////////////////////////////////

    public void clean(boolean wipe) {
        if (myTimer.isRunning()) {
            myTimer.stop();
        }

        myFlashMovieData = null;
        myDisplay.clean();
        myDisplay.repaint();
        frameLabel.setText("No Movie");
        myExploitDisplayListPanel.clean(true);

        if (wipe) {
            if (myFlashObject != null) {
                myFlashObject.clean();
            }
            myFlashObject = null;
        }
    }

    public void setMovie(FMovieData aMovieData) {
        myFlashMovieData = aMovieData;
        myFlashMovieData.nextFrame();
        myDisplay.updateMovieSource(myFlashMovieData);
        frameLabel.setText("Frame #");
        if (myTimer.isRunning()) {
            myTimer.stop();
        }
    }

    public void setObject(FMovie aMovie) {
        if (myFlashObject != null) {
            myFlashObject.clean();
            myFlashObject = null;
        }

        myFlashObject = aMovie;
        myDisplay.updateMovieSource(null);
        myExploitDisplayListPanel.updateNodes(null);
        myFlashMovieData = null;

        frameLabel.setText("Frame #");

        if (myTimer.isRunning()) {
            myTimer.stop();
        }

        if (myFlashObject != null) {
            myTimer = null;
            myTimer = new javax.swing.Timer((int) (1000.0f / myFlashObject.getFrameRate()), myExploitActionListener);
        }
    }

    private void buildGui() {
        buildControls();
        this.setBackground(Color.WHITE);
        this.setLayout(new BoxLayout(this, BoxLayout.Y_AXIS));
        buildMovieControlPanel();
    }

    private void buildMovieControlPanel() {
        JPanel infoPanel = JPanelMaker.XPanel(0, 0);
        JPanel buttonCPanel = JPanelMaker.XPanel(0, 0);

        buttonCPanel.setBackground(Color.WHITE);
        infoPanel.setBackground(Color.WHITE);

        // Info Panel
        frameLabel = new JLabel("No Movie");
        frameLabel.setBackground(Color.WHITE);
        infoPanel.add(frameLabel);
        infoPanel.add(Box.createHorizontalGlue());

        buttonCPanel.add(buttonPlay);
        buttonCPanel.add(buttonPause);

        buttonCPanel.add(buttonNext);
        buttonCPanel.add(buttonNext10);
        buttonCPanel.add(buttonNext100);

        buttonCPanel.add(buttonViewDisplay);
        buttonCPanel.add(Box.createHorizontalGlue());

        this.add(infoPanel);
        this.add(buttonCPanel);
    }

    private void buildControls() {
        myExploitActionListener = new ExploitActionListener();

        myTimer = new javax.swing.Timer((int) (1000), myExploitActionListener);

        buttonPlay = new JButton(new ImageIcon(this.getClass().getResource("/com/mgatelabs/swftools/exploit/gui/images/play.png")));
        buttonPause = new JButton(new ImageIcon(this.getClass().getResource("/com/mgatelabs/swftools/exploit/gui/images/pause.png")));
        buttonNext = new JButton(new ImageIcon(this.getClass().getResource("/com/mgatelabs/swftools/exploit/gui/images/foward.png")));
        buttonNext10 = new JButton(new ImageIcon(this.getClass().getResource("/com/mgatelabs/swftools/exploit/gui/images/fastfoward.png")));
        buttonNext100 = new JButton(new ImageIcon(this.getClass().getResource("/com/mgatelabs/swftools/exploit/gui/images/superfoward.png")));
        buttonViewDisplay = new JButton(new ImageIcon(this.getClass().getResource("/com/mgatelabs/swftools/exploit/gui/images/list.png")));

        buttonPlay.setBorderPainted(false);
        buttonPlay.setContentAreaFilled(true);
        buttonPlay.setBackground(Color.WHITE);
        buttonPlay.setToolTipText("Play");

        buttonPause.setBorderPainted(false);
        buttonPause.setContentAreaFilled(true);
        buttonPause.setBackground(Color.WHITE);
        buttonPause.setToolTipText("Pause");

        buttonNext.setBorderPainted(false);
        buttonNext.setContentAreaFilled(true);
        buttonNext.setBackground(Color.WHITE);
        buttonNext.setToolTipText("Next Frame");

        buttonNext10.setBorderPainted(false);
        buttonNext10.setContentAreaFilled(true);
        buttonNext10.setBackground(Color.WHITE);
        buttonNext10.setToolTipText("Skip 10 Frames");

        buttonNext100.setBorderPainted(false);
        buttonNext100.setContentAreaFilled(true);
        buttonNext100.setBackground(Color.WHITE);
        buttonNext100.setToolTipText("Skip 100 Frames");

        buttonViewDisplay.setBorderPainted(false);
        buttonViewDisplay.setContentAreaFilled(true);
        buttonViewDisplay.setBackground(Color.WHITE);
        buttonViewDisplay.setToolTipText("Update Display List");

        buttonPlay.setPreferredSize(new Dimension(40, 40));
        buttonPause.setPreferredSize(buttonPlay.getPreferredSize());
        buttonNext.setPreferredSize(buttonPlay.getPreferredSize());
        buttonNext10.setPreferredSize(buttonPlay.getPreferredSize());
        buttonNext100.setPreferredSize(buttonPlay.getPreferredSize());
        buttonViewDisplay.setPreferredSize(buttonPlay.getPreferredSize());

        buttonPlay.setMaximumSize(buttonPlay.getPreferredSize());
        buttonPause.setMaximumSize(buttonPlay.getPreferredSize());
        buttonNext.setMaximumSize(buttonPlay.getPreferredSize());
        buttonNext10.setMaximumSize(buttonPlay.getPreferredSize());
        buttonNext100.setMaximumSize(buttonPlay.getPreferredSize());
        buttonViewDisplay.setMaximumSize(buttonPlay.getPreferredSize());

        buttonPlay.addActionListener(myExploitActionListener);
        buttonPause.addActionListener(myExploitActionListener);
        buttonNext.addActionListener(myExploitActionListener);
        buttonNext10.addActionListener(myExploitActionListener);
        buttonNext100.addActionListener(myExploitActionListener);
        buttonViewDisplay.addActionListener(myExploitActionListener);
    }

    public FMovie getFlashObject() {
        return myFlashObject;
    }

    public FMovieData getFlashMovieData() {
        return myFlashMovieData;
    }

    private class ExploitActionListener implements ActionListener {
        public void actionPerformed(ActionEvent e) {
            if (myFlashMovieData != null) {
                if (e.getSource() == myTimer) {
                    if (myDisplay.ready()) {
                        myTimer.stop();

                        myFlashMovieData.nextFrame();
                        frameLabel.setText("Frame #" + myFlashMovieData.getFrame() + "/" + myFlashMovieData.getFrameCount());
                        myDisplay.update();

                        myTimer.start();
                    }
                } else if (e.getSource() == buttonPlay) {
                    myTimer.start();
                } else if (e.getSource() == buttonPause) {
                    if (myTimer != null) {
                        myTimer.stop();
                    }
                } else if (e.getSource() == buttonNext || e.getSource() == buttonNext10 || e.getSource() == buttonNext100) {
                    int count = 1;
                    if (e.getSource() == buttonNext10) {
                        count = 10;
                    } else if (e.getSource() == buttonNext100) {
                        count = 100;
                    }

                    for (int x = 0; x < count; x++) {
                        myFlashMovieData.nextFrame();
                    }

                    frameLabel.setText("Frame # " + myFlashMovieData.getFrame() + "/" + myFlashMovieData.getFrameCount());
                    myDisplay.repaint();

                } else if (e.getSource() == buttonViewDisplay) {
                    //System.out.println("buttonViewDisplay");
                    myExploitDisplayListPanel.updateNodes(myFlashMovieData.getDisplayList());
                }
            }
        }
    }
}