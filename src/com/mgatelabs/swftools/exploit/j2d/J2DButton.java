package com.mgatelabs.swftools.exploit.j2d;

import java.awt.*;
import java.awt.font.FontRenderContext;
import java.awt.geom.Rectangle2D;

public class J2DButton extends J2DShape {
    private Rectangle2D myRect;
    private float myWidth;
    private float myHeight;
    private int myID;
    private boolean selected;
    private String myText;
    private J2DButtonInfo myInfo;
    private boolean special;

    public J2DButton(String text, int id, J2DButtonInfo info, float x, float y, float width, float height) {
        super(x, y);
        myInfo = info;
        myText = text;
        myRect = new Rectangle2D.Float(x, y, width, height);
        myWidth = width;
        myHeight = height;
        myID = id;
        special = false;
    }

    public void setSpecial() {
        special = true;
    }

    public void setSelected(boolean value) {
        selected = value;
    }

    public int getID() {
        return myID;
    }

    public boolean hit(float x, float y) {
        return (x >= getX() && x <= (getX() + myWidth)) && (y >= getY() && y <= (getY() + myHeight));
    }

    public void set(float x, float y) {
        super.setX(x);
        super.setY(y);

        myRect.setRect(x, y, myWidth, myHeight);
    }

    public void render(Graphics2D g2) {
        if (!special) {
            // Background
            g2.setColor(myInfo.getBackground(selected));
            g2.fill(myRect);

            // Outline
            g2.setColor(myInfo.getOutline(selected));
            g2.draw(myRect);
        }

        // ALl mightty text
        g2.setFont(myInfo.getFont(selected));

        FontRenderContext frc = g2.getFontRenderContext();
        Rectangle2D.Float rec2d = (Rectangle2D.Float) myInfo.getFont(selected).getStringBounds(myText, frc);

        float fx = getX() + (myWidth / 2) - ((int) (rec2d.width + 4) / 2);
        float fy = getY() + (myHeight / 2) + ((int) (rec2d.height - 4) / 2);

        g2.setColor(myInfo.getText(selected));
        g2.drawString(myText, fx, fy);
    }

}