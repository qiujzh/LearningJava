package com.mgatelabs.swftools.exploit.j2d;

import com.mgatelabs.swftools.support.plugins.PluginInfo;

import java.util.Hashtable;
import java.util.Vector;

public class DataCategory {
    private int myType;
    private String myName;
    //private int mySelection;
    private Vector myData;

    private int maxSelection;
    private Hashtable mySelections;

    public DataCategory(String name, int type, int size) {
        maxSelection = size;
        mySelections = new Hashtable();

        myData = new Vector();
        myName = name;
        myType = type;
        //mySelection = selection;
    }

    public int getMaxSelection() {
        return maxSelection;
    }

    public void setupFor(int id) {
        for (int x = 0; x < myData.size(); x++) {
            PluginInfo pi = (PluginInfo) myData.get(x);
            if (pi.id == id) {
                mySelections.put("" + pi.id, "Yes");
                //mySelection = x;
            }
        }
    }

    public int getType() {
        return myType;
    }
      
   	/*
       public int getSelectionIndex()
      {
         return mySelection;
      }
    	*/

    public boolean isSelection(int id) {
        return mySelections.get("" + id) != null;
    }

    public PluginInfo getPlugin(int index) {
        //if (mySelection == -1)
        //return null;
        return (PluginInfo) myData.get(index);
    }

    public boolean isPlugin(int id) {
        for (int x = 0; x < myData.size(); x++) {
            PluginInfo pi = (PluginInfo) myData.get(x);
            if (pi.id == id) {
                return true;
            }
        }
        return false;
    }

    public String getName() {
        return myName;
    }


    public boolean isSelection() {
        return !mySelections.isEmpty();
    }

    public void addSelection(int index) {
        if (maxSelection == 1) {
            mySelections.clear();
        }

        mySelections.put("" + index, "Yes");

    }

    public void toggleSelection(int index) {
        if (isSelection(index)) {
            removeSelection(index);
        } else {
            addSelection(index);
        }
    }

    public void removeSelection(int index) {
        mySelections.remove("" + index);
    }

    public Vector getData() {
        return myData;
    }

    public void addPlugin(PluginInfo pi) {
        myData.add(pi);
    }
}